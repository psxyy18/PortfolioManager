"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/details/page",{

/***/ "(app-pages-browser)/./mock/marketMockData.ts":
/*!********************************!*\
  !*** ./mock/marketMockData.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   marketTop10Stocks: () => (/* binding */ marketTop10Stocks),\n/* harmony export */   mockPortfolioSummary: () => (/* binding */ mockPortfolioSummary),\n/* harmony export */   mockPurchaseErrors: () => (/* binding */ mockPurchaseErrors),\n/* harmony export */   mockPurchaseResponse: () => (/* binding */ mockPurchaseResponse),\n/* harmony export */   mockUserBalance: () => (/* binding */ mockUserBalance),\n/* harmony export */   mockUserHoldings: () => (/* binding */ mockUserHoldings)\n/* harmony export */ });\n// Mock data for market top 10 stocks and trading functionality\n// Top 10 market stocks mock data\nconst marketTop10Stocks = [\n    {\n        symbol: \"AAPL\",\n        name: \"Apple Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 212.38,\n        dailyChange: 2.34,\n        dailyChangePercent: 1.21,\n        marketCap: 3100000000000,\n        volume: 45234567,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"MSFT\",\n        name: \"Microsoft Corporation\",\n        exchange: \"NASDAQ\",\n        currentPrice: 515.95,\n        dailyChange: -1.45,\n        dailyChangePercent: -0.38,\n        marketCap: 2800000000000,\n        volume: 23456789,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"GOOGL\",\n        name: \"Alphabet Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 198.47,\n        dailyChange: 3.21,\n        dailyChangePercent: 2.30,\n        marketCap: 1780000000000,\n        volume: 34567890,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"AMZN\",\n        name: \"Amazon.com Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 231.80,\n        dailyChange: -0.87,\n        dailyChangePercent: -0.57,\n        marketCap: 1580000000000,\n        volume: 28765432,\n        sector: \"Consumer Discretionary\"\n    },\n    {\n        symbol: \"TSLA\",\n        name: \"Tesla Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 324.45,\n        dailyChange: 12.34,\n        dailyChangePercent: 5.23,\n        marketCap: 790000000000,\n        volume: 67890123,\n        sector: \"Automotive\"\n    },\n    {\n        symbol: \"META\",\n        name: \"Meta Platforms Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 708.50,\n        dailyChange: -5.67,\n        dailyChangePercent: -1.16,\n        marketCap: 1230000000000,\n        volume: 19876543,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"NVDA\",\n        name: \"NVIDIA Corporation\",\n        exchange: \"NASDAQ\",\n        currentPrice: 179.88,\n        dailyChange: 15.42,\n        dailyChangePercent: 1.79,\n        marketCap: 2150000000000,\n        volume: 45678901,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"NFLX\",\n        name: \"Netflix Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 1184.84,\n        dailyChange: 8.91,\n        dailyChangePercent: 1.85,\n        marketCap: 217000000000,\n        volume: 12345678,\n        sector: \"Communication Services\"\n    },\n    {\n        symbol: \"ADBE\",\n        name: \"Adobe Inc.\",\n        exchange: \"NASDAQ\",\n        currentPrice: 370.72,\n        dailyChange: -2.15,\n        dailyChangePercent: -0.37,\n        marketCap: 258000000000,\n        volume: 9876543,\n        sector: \"Technology\"\n    },\n    {\n        symbol: \"CRM\",\n        name: \"Salesforce Inc.\",\n        exchange: \"NYSE\",\n        currentPrice: 267.76,\n        dailyChange: 4.67,\n        dailyChangePercent: 1.79,\n        marketCap: 258000000000,\n        volume: 8765432,\n        sector: \"Technology\"\n    }\n];\n// Mock user balance\nconst mockUserBalance = {\n    cashBalance: 50000.00,\n    currency: \"USD\"\n};\n// Mock用户持仓数据\nconst mockUserHoldings = [\n    {\n        stock: marketTop10Stocks[0],\n        quantity: 150,\n        averageCost: 174.50,\n        purchaseDate: \"2024-10-15\",\n        currentValue: 150 * 195.89,\n        totalCost: 150 * 174.50,\n        unrealizedPnL: 150 * (195.89 - 174.50),\n        unrealizedPnLPercent: (195.89 - 174.50) / 174.50 * 100,\n        todayPnL: 150 * 2.34,\n        todayPnLPercent: 1.21\n    },\n    {\n        stock: marketTop10Stocks[1],\n        quantity: 80,\n        averageCost: 385.20,\n        purchaseDate: \"2024-11-02\",\n        currentValue: 80 * 378.85,\n        totalCost: 80 * 385.20,\n        unrealizedPnL: 80 * (378.85 - 385.20),\n        unrealizedPnLPercent: (378.85 - 385.20) / 385.20 * 100,\n        todayPnL: 80 * -1.45,\n        todayPnLPercent: -0.38\n    },\n    {\n        stock: marketTop10Stocks[2],\n        quantity: 45,\n        averageCost: 138.90,\n        purchaseDate: \"2024-09-20\",\n        currentValue: 45 * 142.30,\n        totalCost: 45 * 138.90,\n        unrealizedPnL: 45 * (142.30 - 138.90),\n        unrealizedPnLPercent: (142.30 - 138.90) / 138.90 * 100,\n        todayPnL: 45 * 1.85,\n        todayPnLPercent: 1.32\n    },\n    {\n        stock: marketTop10Stocks[3],\n        quantity: 120,\n        averageCost: 248.75,\n        purchaseDate: \"2024-12-01\",\n        currentValue: 120 * 251.20,\n        totalCost: 120 * 248.75,\n        unrealizedPnL: 120 * (251.20 - 248.75),\n        unrealizedPnLPercent: (251.20 - 248.75) / 248.75 * 100,\n        todayPnL: 120 * -3.80,\n        todayPnLPercent: -1.49\n    },\n    {\n        stock: marketTop10Stocks[4],\n        quantity: 60,\n        averageCost: 142.10,\n        purchaseDate: \"2024-10-28\",\n        currentValue: 60 * 145.80,\n        totalCost: 60 * 142.10,\n        unrealizedPnL: 60 * (145.80 - 142.10),\n        unrealizedPnLPercent: (145.80 - 142.10) / 142.10 * 100,\n        todayPnL: 60 * 0.95,\n        todayPnLPercent: 0.66\n    }\n];\n// 计算持仓组合汇总\nconst calculatePortfolioSummary = ()=>{\n    const totalValue = mockUserHoldings.reduce((sum, holding)=>sum + holding.currentValue, 0);\n    const totalCost = mockUserHoldings.reduce((sum, holding)=>sum + holding.totalCost, 0);\n    const totalUnrealizedPnL = mockUserHoldings.reduce((sum, holding)=>sum + holding.unrealizedPnL, 0);\n    const todayTotalPnL = mockUserHoldings.reduce((sum, holding)=>sum + holding.todayPnL, 0);\n    return {\n        totalValue,\n        totalCost,\n        totalUnrealizedPnL,\n        totalUnrealizedPnLPercent: totalUnrealizedPnL / totalCost * 100,\n        todayTotalPnL,\n        todayTotalPnLPercent: todayTotalPnL / totalValue * 100,\n        cashBalance: mockUserBalance.cashBalance,\n        totalAssets: totalValue + mockUserBalance.cashBalance,\n        weightedAverageReturn: totalUnrealizedPnL / totalCost * 100\n    };\n};\nconst mockPortfolioSummary = calculatePortfolioSummary();\n// Mock purchase response\nconst mockPurchaseResponse = {\n    success: true,\n    message: \"Successfully purchased portfolio\",\n    transactionId: \"TXN_\" + Date.now(),\n    purchasedItems: [],\n    totalCost: 0,\n    remainingBalance: 0\n};\n// Mock purchase error responses\nconst mockPurchaseErrors = {\n    insufficientFunds: {\n        success: false,\n        message: \"Insufficient funds to complete purchase\",\n        requiredAmount: 0,\n        availableBalance: 0\n    },\n    invalidQuantity: {\n        success: false,\n        message: \"Invalid quantity specified\"\n    },\n    marketClosed: {\n        success: false,\n        message: \"Market is currently closed\"\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./mock/marketMockData.ts\n"));

/***/ })

});