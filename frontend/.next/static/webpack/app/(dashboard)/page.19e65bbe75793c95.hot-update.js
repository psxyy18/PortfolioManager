"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/page",{

/***/ "(app-pages-browser)/./hooks/usePortfolioGains.ts":
/*!************************************!*\
  !*** ./hooks/usePortfolioGains.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePortfolioGains: () => (/* binding */ usePortfolioGains)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _usePortfolio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./usePortfolio */ \"(app-pages-browser)/./hooks/usePortfolio.ts\");\n/* harmony import */ var _usePortfolioData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./usePortfolioData */ \"(app-pages-browser)/./hooks/usePortfolioData.ts\");\n\n\n\nconst usePortfolioGains = ()=>{\n    const { data: portfolioData } = (0,_usePortfolio__WEBPACK_IMPORTED_MODULE_1__.usePortfolio)();\n    const { data: gainLossData } = (0,_usePortfolioData__WEBPACK_IMPORTED_MODULE_2__.usePortfolioData)();\n    const [gains, setGains] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        todayGain: 0,\n        todayGainPercent: 0,\n        holdingGain: 0,\n        holdingGainPercent: 0,\n        cumulativeGain: 0,\n        cumulativeGainPercent: 0,\n        loading: false,\n        error: null\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"usePortfolioGains.useEffect\": ()=>{\n            if (!portfolioData || !gainLossData) {\n                return;\n            }\n            const calculateGains = {\n                \"usePortfolioGains.useEffect.calculateGains\": async ()=>{\n                    try {\n                        setGains({\n                            \"usePortfolioGains.useEffect.calculateGains\": (prev)=>({\n                                    ...prev,\n                                    loading: true\n                                })\n                        }[\"usePortfolioGains.useEffect.calculateGains\"]);\n                        // Calculate holding gains (current value - total cost)\n                        let totalHoldingGain = 0;\n                        let totalCost = 0;\n                        let totalCurrentValue = 0;\n                        let totalTodayGain = 0;\n                        // Calculate today's gain for each holding\n                        for (const holding of gainLossData.holdings){\n                            if (holding.current_value && holding.total_cost && holding.holding_shares) {\n                                const currentValue = Number(holding.current_value);\n                                const totalCostForStock = Number(holding.total_cost);\n                                const shares = Number(holding.holding_shares);\n                                // Calculate holding gain\n                                const holdingGain = currentValue - totalCostForStock;\n                                totalHoldingGain += holdingGain;\n                                totalCost += totalCostForStock;\n                                totalCurrentValue += currentValue;\n                                // Calculate today's gain using current price and average cost\n                                if (holding.current_price) {\n                                    const currentPrice = Number(holding.current_price);\n                                    const avgCostPerShare = totalCostForStock / shares;\n                                    // Calculate today's gain as a small percentage of the total gain\n                                    // This simulates daily price movement\n                                    const totalGainPerShare = currentPrice - avgCostPerShare;\n                                    const dailyChangePerShare = totalGainPerShare * 0.01; // 1% of total gain as daily change\n                                    const todayGainForStock = dailyChangePerShare * shares;\n                                    totalTodayGain += todayGainForStock;\n                                }\n                            }\n                        }\n                        // Calculate cumulative gain (sum of all gains)\n                        const cumulativeGain = totalHoldingGain;\n                        const cumulativeGainPercent = totalCost > 0 ? cumulativeGain / totalCost * 100 : 0;\n                        const todayGainPercent = totalCost > 0 ? totalTodayGain / totalCost * 100 : 0;\n                        setGains({\n                            todayGain: totalTodayGain,\n                            todayGainPercent,\n                            holdingGain: totalHoldingGain,\n                            holdingGainPercent: totalCost > 0 ? totalHoldingGain / totalCost * 100 : 0,\n                            cumulativeGain,\n                            cumulativeGainPercent,\n                            loading: false,\n                            error: null\n                        });\n                    } catch (error) {\n                        setGains({\n                            \"usePortfolioGains.useEffect.calculateGains\": (prev)=>({\n                                    ...prev,\n                                    loading: false,\n                                    error: error instanceof Error ? error.message : 'Failed to calculate gains'\n                                })\n                        }[\"usePortfolioGains.useEffect.calculateGains\"]);\n                    }\n                }\n            }[\"usePortfolioGains.useEffect.calculateGains\"];\n            calculateGains();\n        }\n    }[\"usePortfolioGains.useEffect\"], [\n        portfolioData,\n        gainLossData\n    ]);\n    return gains;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZVBvcnRmb2xpb0dhaW5zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRDO0FBQ0U7QUFDUTtBQWEvQyxNQUFNSSxvQkFBb0I7SUFDL0IsTUFBTSxFQUFFQyxNQUFNQyxhQUFhLEVBQUUsR0FBR0osMkRBQVlBO0lBQzVDLE1BQU0sRUFBRUcsTUFBTUUsWUFBWSxFQUFFLEdBQUdKLG1FQUFnQkE7SUFDL0MsTUFBTSxDQUFDSyxPQUFPQyxTQUFTLEdBQUdULCtDQUFRQSxDQUFXO1FBQzNDVSxXQUFXO1FBQ1hDLGtCQUFrQjtRQUNsQkMsYUFBYTtRQUNiQyxvQkFBb0I7UUFDcEJDLGdCQUFnQjtRQUNoQkMsdUJBQXVCO1FBQ3ZCQyxTQUFTO1FBQ1RDLE9BQU87SUFDVDtJQUVBaEIsZ0RBQVNBO3VDQUFDO1lBQ1IsSUFBSSxDQUFDSyxpQkFBaUIsQ0FBQ0MsY0FBYztnQkFDbkM7WUFDRjtZQUVBLE1BQU1XOzhEQUFpQjtvQkFDckIsSUFBSTt3QkFDRlQ7MEVBQVNVLENBQUFBLE9BQVM7b0NBQUUsR0FBR0EsSUFBSTtvQ0FBRUgsU0FBUztnQ0FBSzs7d0JBRTNDLHVEQUF1RDt3QkFDdkQsSUFBSUksbUJBQW1CO3dCQUN2QixJQUFJQyxZQUFZO3dCQUNoQixJQUFJQyxvQkFBb0I7d0JBQ3hCLElBQUlDLGlCQUFpQjt3QkFFckIsMENBQTBDO3dCQUMxQyxLQUFLLE1BQU1DLFdBQVdqQixhQUFha0IsUUFBUSxDQUFFOzRCQUMzQyxJQUFJRCxRQUFRRSxhQUFhLElBQUlGLFFBQVFHLFVBQVUsSUFBSUgsUUFBUUksY0FBYyxFQUFFO2dDQUN6RSxNQUFNQyxlQUFlQyxPQUFPTixRQUFRRSxhQUFhO2dDQUNqRCxNQUFNSyxvQkFBb0JELE9BQU9OLFFBQVFHLFVBQVU7Z0NBQ25ELE1BQU1LLFNBQVNGLE9BQU9OLFFBQVFJLGNBQWM7Z0NBRTVDLHlCQUF5QjtnQ0FDekIsTUFBTWhCLGNBQWNpQixlQUFlRTtnQ0FDbkNYLG9CQUFvQlI7Z0NBQ3BCUyxhQUFhVTtnQ0FDYlQscUJBQXFCTztnQ0FFckIsOERBQThEO2dDQUM5RCxJQUFJTCxRQUFRUyxhQUFhLEVBQUU7b0NBQ3pCLE1BQU1DLGVBQWVKLE9BQU9OLFFBQVFTLGFBQWE7b0NBQ2pELE1BQU1FLGtCQUFrQkosb0JBQW9CQztvQ0FFNUMsaUVBQWlFO29DQUNqRSxzQ0FBc0M7b0NBQ3RDLE1BQU1JLG9CQUFvQkYsZUFBZUM7b0NBQ3pDLE1BQU1FLHNCQUFzQkQsb0JBQW9CLE1BQU0sbUNBQW1DO29DQUN6RixNQUFNRSxvQkFBb0JELHNCQUFzQkw7b0NBQ2hEVCxrQkFBa0JlO2dDQUNwQjs0QkFDRjt3QkFDRjt3QkFFQSwrQ0FBK0M7d0JBQy9DLE1BQU14QixpQkFBaUJNO3dCQUN2QixNQUFNTCx3QkFBd0JNLFlBQVksSUFBSSxpQkFBa0JBLFlBQWEsTUFBTTt3QkFDbkYsTUFBTVYsbUJBQW1CVSxZQUFZLElBQUksaUJBQWtCQSxZQUFhLE1BQU07d0JBRTlFWixTQUFTOzRCQUNQQyxXQUFXYTs0QkFDWFo7NEJBQ0FDLGFBQWFROzRCQUNiUCxvQkFBb0JRLFlBQVksSUFBSSxtQkFBb0JBLFlBQWEsTUFBTTs0QkFDM0VQOzRCQUNBQzs0QkFDQUMsU0FBUzs0QkFDVEMsT0FBTzt3QkFDVDtvQkFDRixFQUFFLE9BQU9BLE9BQU87d0JBQ2RSOzBFQUFTVSxDQUFBQSxPQUFTO29DQUNoQixHQUFHQSxJQUFJO29DQUNQSCxTQUFTO29DQUNUQyxPQUFPQSxpQkFBaUJzQixRQUFRdEIsTUFBTXVCLE9BQU8sR0FBRztnQ0FDbEQ7O29CQUNGO2dCQUNGOztZQUVBdEI7UUFDRjtzQ0FBRztRQUFDWjtRQUFlQztLQUFhO0lBRWhDLE9BQU9DO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL3dlbnRhb2Zhbi9EZXNrdG9wL1RyYWluaW5nL1Byb2plY3QvRmluYWwvZnJvbnRlbmQvaG9va3MvdXNlUG9ydGZvbGlvR2FpbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVBvcnRmb2xpbyB9IGZyb20gJy4vdXNlUG9ydGZvbGlvJztcbmltcG9ydCB7IHVzZVBvcnRmb2xpb0RhdGEgfSBmcm9tICcuL3VzZVBvcnRmb2xpb0RhdGEnO1xuXG5pbnRlcmZhY2UgR2FpbkRhdGEge1xuICB0b2RheUdhaW46IG51bWJlcjtcbiAgdG9kYXlHYWluUGVyY2VudDogbnVtYmVyO1xuICBob2xkaW5nR2FpbjogbnVtYmVyO1xuICBob2xkaW5nR2FpblBlcmNlbnQ6IG51bWJlcjtcbiAgY3VtdWxhdGl2ZUdhaW46IG51bWJlcjtcbiAgY3VtdWxhdGl2ZUdhaW5QZXJjZW50OiBudW1iZXI7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGVycm9yOiBzdHJpbmcgfCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgdXNlUG9ydGZvbGlvR2FpbnMgPSAoKTogR2FpbkRhdGEgPT4ge1xuICBjb25zdCB7IGRhdGE6IHBvcnRmb2xpb0RhdGEgfSA9IHVzZVBvcnRmb2xpbygpO1xuICBjb25zdCB7IGRhdGE6IGdhaW5Mb3NzRGF0YSB9ID0gdXNlUG9ydGZvbGlvRGF0YSgpO1xuICBjb25zdCBbZ2FpbnMsIHNldEdhaW5zXSA9IHVzZVN0YXRlPEdhaW5EYXRhPih7XG4gICAgdG9kYXlHYWluOiAwLFxuICAgIHRvZGF5R2FpblBlcmNlbnQ6IDAsXG4gICAgaG9sZGluZ0dhaW46IDAsXG4gICAgaG9sZGluZ0dhaW5QZXJjZW50OiAwLFxuICAgIGN1bXVsYXRpdmVHYWluOiAwLFxuICAgIGN1bXVsYXRpdmVHYWluUGVyY2VudDogMCxcbiAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICBlcnJvcjogbnVsbFxuICB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcG9ydGZvbGlvRGF0YSB8fCAhZ2Fpbkxvc3NEYXRhKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2FsY3VsYXRlR2FpbnMgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXRHYWlucyhwcmV2ID0+ICh7IC4uLnByZXYsIGxvYWRpbmc6IHRydWUgfSkpO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBob2xkaW5nIGdhaW5zIChjdXJyZW50IHZhbHVlIC0gdG90YWwgY29zdClcbiAgICAgICAgbGV0IHRvdGFsSG9sZGluZ0dhaW4gPSAwO1xuICAgICAgICBsZXQgdG90YWxDb3N0ID0gMDtcbiAgICAgICAgbGV0IHRvdGFsQ3VycmVudFZhbHVlID0gMDtcbiAgICAgICAgbGV0IHRvdGFsVG9kYXlHYWluID0gMDtcblxuICAgICAgICAvLyBDYWxjdWxhdGUgdG9kYXkncyBnYWluIGZvciBlYWNoIGhvbGRpbmdcbiAgICAgICAgZm9yIChjb25zdCBob2xkaW5nIG9mIGdhaW5Mb3NzRGF0YS5ob2xkaW5ncykge1xuICAgICAgICAgIGlmIChob2xkaW5nLmN1cnJlbnRfdmFsdWUgJiYgaG9sZGluZy50b3RhbF9jb3N0ICYmIGhvbGRpbmcuaG9sZGluZ19zaGFyZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IE51bWJlcihob2xkaW5nLmN1cnJlbnRfdmFsdWUpO1xuICAgICAgICAgICAgY29uc3QgdG90YWxDb3N0Rm9yU3RvY2sgPSBOdW1iZXIoaG9sZGluZy50b3RhbF9jb3N0KTtcbiAgICAgICAgICAgIGNvbnN0IHNoYXJlcyA9IE51bWJlcihob2xkaW5nLmhvbGRpbmdfc2hhcmVzKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIGhvbGRpbmcgZ2FpblxuICAgICAgICAgICAgY29uc3QgaG9sZGluZ0dhaW4gPSBjdXJyZW50VmFsdWUgLSB0b3RhbENvc3RGb3JTdG9jaztcbiAgICAgICAgICAgIHRvdGFsSG9sZGluZ0dhaW4gKz0gaG9sZGluZ0dhaW47XG4gICAgICAgICAgICB0b3RhbENvc3QgKz0gdG90YWxDb3N0Rm9yU3RvY2s7XG4gICAgICAgICAgICB0b3RhbEN1cnJlbnRWYWx1ZSArPSBjdXJyZW50VmFsdWU7XG5cbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0b2RheSdzIGdhaW4gdXNpbmcgY3VycmVudCBwcmljZSBhbmQgYXZlcmFnZSBjb3N0XG4gICAgICAgICAgICBpZiAoaG9sZGluZy5jdXJyZW50X3ByaWNlKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRQcmljZSA9IE51bWJlcihob2xkaW5nLmN1cnJlbnRfcHJpY2UpO1xuICAgICAgICAgICAgICBjb25zdCBhdmdDb3N0UGVyU2hhcmUgPSB0b3RhbENvc3RGb3JTdG9jayAvIHNoYXJlcztcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0b2RheSdzIGdhaW4gYXMgYSBzbWFsbCBwZXJjZW50YWdlIG9mIHRoZSB0b3RhbCBnYWluXG4gICAgICAgICAgICAgIC8vIFRoaXMgc2ltdWxhdGVzIGRhaWx5IHByaWNlIG1vdmVtZW50XG4gICAgICAgICAgICAgIGNvbnN0IHRvdGFsR2FpblBlclNoYXJlID0gY3VycmVudFByaWNlIC0gYXZnQ29zdFBlclNoYXJlO1xuICAgICAgICAgICAgICBjb25zdCBkYWlseUNoYW5nZVBlclNoYXJlID0gdG90YWxHYWluUGVyU2hhcmUgKiAwLjAxOyAvLyAxJSBvZiB0b3RhbCBnYWluIGFzIGRhaWx5IGNoYW5nZVxuICAgICAgICAgICAgICBjb25zdCB0b2RheUdhaW5Gb3JTdG9jayA9IGRhaWx5Q2hhbmdlUGVyU2hhcmUgKiBzaGFyZXM7XG4gICAgICAgICAgICAgIHRvdGFsVG9kYXlHYWluICs9IHRvZGF5R2FpbkZvclN0b2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBjdW11bGF0aXZlIGdhaW4gKHN1bSBvZiBhbGwgZ2FpbnMpXG4gICAgICAgIGNvbnN0IGN1bXVsYXRpdmVHYWluID0gdG90YWxIb2xkaW5nR2FpbjtcbiAgICAgICAgY29uc3QgY3VtdWxhdGl2ZUdhaW5QZXJjZW50ID0gdG90YWxDb3N0ID4gMCA/IChjdW11bGF0aXZlR2FpbiAvIHRvdGFsQ29zdCkgKiAxMDAgOiAwO1xuICAgICAgICBjb25zdCB0b2RheUdhaW5QZXJjZW50ID0gdG90YWxDb3N0ID4gMCA/ICh0b3RhbFRvZGF5R2FpbiAvIHRvdGFsQ29zdCkgKiAxMDAgOiAwO1xuXG4gICAgICAgIHNldEdhaW5zKHtcbiAgICAgICAgICB0b2RheUdhaW46IHRvdGFsVG9kYXlHYWluLFxuICAgICAgICAgIHRvZGF5R2FpblBlcmNlbnQsXG4gICAgICAgICAgaG9sZGluZ0dhaW46IHRvdGFsSG9sZGluZ0dhaW4sXG4gICAgICAgICAgaG9sZGluZ0dhaW5QZXJjZW50OiB0b3RhbENvc3QgPiAwID8gKHRvdGFsSG9sZGluZ0dhaW4gLyB0b3RhbENvc3QpICogMTAwIDogMCxcbiAgICAgICAgICBjdW11bGF0aXZlR2FpbixcbiAgICAgICAgICBjdW11bGF0aXZlR2FpblBlcmNlbnQsXG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgZXJyb3I6IG51bGxcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBzZXRHYWlucyhwcmV2ID0+ICh7XG4gICAgICAgICAgLi4ucHJldixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGNhbGN1bGF0ZSBnYWlucydcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjYWxjdWxhdGVHYWlucygpO1xuICB9LCBbcG9ydGZvbGlvRGF0YSwgZ2Fpbkxvc3NEYXRhXSk7XG5cbiAgcmV0dXJuIGdhaW5zO1xufTsgIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUG9ydGZvbGlvIiwidXNlUG9ydGZvbGlvRGF0YSIsInVzZVBvcnRmb2xpb0dhaW5zIiwiZGF0YSIsInBvcnRmb2xpb0RhdGEiLCJnYWluTG9zc0RhdGEiLCJnYWlucyIsInNldEdhaW5zIiwidG9kYXlHYWluIiwidG9kYXlHYWluUGVyY2VudCIsImhvbGRpbmdHYWluIiwiaG9sZGluZ0dhaW5QZXJjZW50IiwiY3VtdWxhdGl2ZUdhaW4iLCJjdW11bGF0aXZlR2FpblBlcmNlbnQiLCJsb2FkaW5nIiwiZXJyb3IiLCJjYWxjdWxhdGVHYWlucyIsInByZXYiLCJ0b3RhbEhvbGRpbmdHYWluIiwidG90YWxDb3N0IiwidG90YWxDdXJyZW50VmFsdWUiLCJ0b3RhbFRvZGF5R2FpbiIsImhvbGRpbmciLCJob2xkaW5ncyIsImN1cnJlbnRfdmFsdWUiLCJ0b3RhbF9jb3N0IiwiaG9sZGluZ19zaGFyZXMiLCJjdXJyZW50VmFsdWUiLCJOdW1iZXIiLCJ0b3RhbENvc3RGb3JTdG9jayIsInNoYXJlcyIsImN1cnJlbnRfcHJpY2UiLCJjdXJyZW50UHJpY2UiLCJhdmdDb3N0UGVyU2hhcmUiLCJ0b3RhbEdhaW5QZXJTaGFyZSIsImRhaWx5Q2hhbmdlUGVyU2hhcmUiLCJ0b2RheUdhaW5Gb3JTdG9jayIsIkVycm9yIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/usePortfolioGains.ts\n"));

/***/ })

});