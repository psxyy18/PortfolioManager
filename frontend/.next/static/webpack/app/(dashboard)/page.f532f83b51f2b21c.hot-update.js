"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/page",{

/***/ "(app-pages-browser)/./hooks/usePortfolioGains.ts":
/*!************************************!*\
  !*** ./hooks/usePortfolioGains.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePortfolioGains: () => (/* binding */ usePortfolioGains)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _usePortfolio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./usePortfolio */ \"(app-pages-browser)/./hooks/usePortfolio.ts\");\n/* harmony import */ var _usePortfolioData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./usePortfolioData */ \"(app-pages-browser)/./hooks/usePortfolioData.ts\");\n/* harmony import */ var _useYesterdayPrices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useYesterdayPrices */ \"(app-pages-browser)/./hooks/useYesterdayPrices.ts\");\n\n\n\n\nconst usePortfolioGains = ()=>{\n    const { data: portfolioData } = (0,_usePortfolio__WEBPACK_IMPORTED_MODULE_1__.usePortfolio)();\n    const { data: gainLossData } = (0,_usePortfolioData__WEBPACK_IMPORTED_MODULE_2__.usePortfolioData)();\n    const { data: yesterdayPrices } = (0,_useYesterdayPrices__WEBPACK_IMPORTED_MODULE_3__.useYesterdayPrices)();\n    const [gains, setGains] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        todayGain: 0,\n        todayGainPercent: 0,\n        holdingGain: 0,\n        holdingGainPercent: 0,\n        cumulativeGain: 0,\n        cumulativeGainPercent: 0,\n        loading: false,\n        error: null\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"usePortfolioGains.useEffect\": ()=>{\n            if (!portfolioData || !gainLossData || !yesterdayPrices) {\n                return;\n            }\n            const calculateGains = {\n                \"usePortfolioGains.useEffect.calculateGains\": async ()=>{\n                    try {\n                        setGains({\n                            \"usePortfolioGains.useEffect.calculateGains\": (prev)=>({\n                                    ...prev,\n                                    loading: true\n                                })\n                        }[\"usePortfolioGains.useEffect.calculateGains\"]);\n                        // Calculate holding gains (current value - total cost)\n                        let totalHoldingGain = 0;\n                        let totalCost = 0;\n                        let totalCurrentValue = 0;\n                        let totalTodayGain = 0;\n                        // Calculate today's gain for each holding\n                        for (const holding of gainLossData.holdings){\n                            if (holding.current_value && holding.total_cost && holding.holding_shares) {\n                                const currentValue = Number(holding.current_value);\n                                const totalCostForStock = Number(holding.total_cost);\n                                const shares = Number(holding.holding_shares);\n                                // Calculate holding gain\n                                const holdingGain = currentValue - totalCostForStock;\n                                totalHoldingGain += holdingGain;\n                                totalCost += totalCostForStock;\n                                totalCurrentValue += currentValue;\n                                // Calculate today's gain using current price and yesterday's price\n                                if (holding.current_price) {\n                                    const currentPrice = Number(holding.current_price);\n                                    const yesterdayPriceData = yesterdayPrices.find({\n                                        \"usePortfolioGains.useEffect.calculateGains.yesterdayPriceData\": (p)=>p.symbol === holding.ticker_symbol\n                                    }[\"usePortfolioGains.useEffect.calculateGains.yesterdayPriceData\"]);\n                                    if (yesterdayPriceData) {\n                                        const yesterdayPrice = yesterdayPriceData.yesterdayPrice;\n                                        const dailyChangePerShare = currentPrice - yesterdayPrice;\n                                        const todayGainForStock = dailyChangePerShare * shares;\n                                        totalTodayGain += todayGainForStock;\n                                    } else {\n                                        // Fallback: use a small percentage of the total gain as daily change\n                                        const avgCostPerShare = totalCostForStock / shares;\n                                        const dailyChangePerShare = (currentPrice - avgCostPerShare) * 0.01;\n                                        const todayGainForStock = dailyChangePerShare * shares;\n                                        totalTodayGain += todayGainForStock;\n                                    }\n                                }\n                            }\n                        }\n                        // Calculate cumulative gain (sum of all gains)\n                        const cumulativeGain = totalHoldingGain;\n                        const cumulativeGainPercent = totalCost > 0 ? cumulativeGain / totalCost * 100 : 0;\n                        const todayGainPercent = totalCost > 0 ? totalTodayGain / totalCost * 100 : 0;\n                        setGains({\n                            todayGain: totalTodayGain,\n                            todayGainPercent,\n                            holdingGain: totalHoldingGain,\n                            holdingGainPercent: totalCost > 0 ? totalHoldingGain / totalCost * 100 : 0,\n                            cumulativeGain,\n                            cumulativeGainPercent,\n                            loading: false,\n                            error: null\n                        });\n                    } catch (error) {\n                        setGains({\n                            \"usePortfolioGains.useEffect.calculateGains\": (prev)=>({\n                                    ...prev,\n                                    loading: false,\n                                    error: error instanceof Error ? error.message : 'Failed to calculate gains'\n                                })\n                        }[\"usePortfolioGains.useEffect.calculateGains\"]);\n                    }\n                }\n            }[\"usePortfolioGains.useEffect.calculateGains\"];\n            calculateGains();\n        }\n    }[\"usePortfolioGains.useEffect\"], [\n        portfolioData,\n        gainLossData\n    ]);\n    return gains;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZVBvcnRmb2xpb0dhaW5zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0QztBQUNFO0FBQ1E7QUFDSTtBQWFuRCxNQUFNSyxvQkFBb0I7SUFDL0IsTUFBTSxFQUFFQyxNQUFNQyxhQUFhLEVBQUUsR0FBR0wsMkRBQVlBO0lBQzVDLE1BQU0sRUFBRUksTUFBTUUsWUFBWSxFQUFFLEdBQUdMLG1FQUFnQkE7SUFDL0MsTUFBTSxFQUFFRyxNQUFNRyxlQUFlLEVBQUUsR0FBR0wsdUVBQWtCQTtJQUNwRCxNQUFNLENBQUNNLE9BQU9DLFNBQVMsR0FBR1gsK0NBQVFBLENBQVc7UUFDM0NZLFdBQVc7UUFDWEMsa0JBQWtCO1FBQ2xCQyxhQUFhO1FBQ2JDLG9CQUFvQjtRQUNwQkMsZ0JBQWdCO1FBQ2hCQyx1QkFBdUI7UUFDdkJDLFNBQVM7UUFDVEMsT0FBTztJQUNUO0lBRUFsQixnREFBU0E7dUNBQUM7WUFDUixJQUFJLENBQUNNLGlCQUFpQixDQUFDQyxnQkFBZ0IsQ0FBQ0MsaUJBQWlCO2dCQUN2RDtZQUNGO1lBRUEsTUFBTVc7OERBQWlCO29CQUNyQixJQUFJO3dCQUNGVDswRUFBU1UsQ0FBQUEsT0FBUztvQ0FBRSxHQUFHQSxJQUFJO29DQUFFSCxTQUFTO2dDQUFLOzt3QkFFM0MsdURBQXVEO3dCQUN2RCxJQUFJSSxtQkFBbUI7d0JBQ3ZCLElBQUlDLFlBQVk7d0JBQ2hCLElBQUlDLG9CQUFvQjt3QkFDeEIsSUFBSUMsaUJBQWlCO3dCQUVyQiwwQ0FBMEM7d0JBQzFDLEtBQUssTUFBTUMsV0FBV2xCLGFBQWFtQixRQUFRLENBQUU7NEJBQzNDLElBQUlELFFBQVFFLGFBQWEsSUFBSUYsUUFBUUcsVUFBVSxJQUFJSCxRQUFRSSxjQUFjLEVBQUU7Z0NBQ3pFLE1BQU1DLGVBQWVDLE9BQU9OLFFBQVFFLGFBQWE7Z0NBQ2pELE1BQU1LLG9CQUFvQkQsT0FBT04sUUFBUUcsVUFBVTtnQ0FDbkQsTUFBTUssU0FBU0YsT0FBT04sUUFBUUksY0FBYztnQ0FFNUMseUJBQXlCO2dDQUN6QixNQUFNaEIsY0FBY2lCLGVBQWVFO2dDQUNuQ1gsb0JBQW9CUjtnQ0FDcEJTLGFBQWFVO2dDQUNiVCxxQkFBcUJPO2dDQUVyQixtRUFBbUU7Z0NBQ25FLElBQUlMLFFBQVFTLGFBQWEsRUFBRTtvQ0FDekIsTUFBTUMsZUFBZUosT0FBT04sUUFBUVMsYUFBYTtvQ0FDakQsTUFBTUUscUJBQXFCNUIsZ0JBQWdCNkIsSUFBSTt5R0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsTUFBTSxLQUFLZCxRQUFRZSxhQUFhOztvQ0FFdkYsSUFBSUosb0JBQW9CO3dDQUN0QixNQUFNSyxpQkFBaUJMLG1CQUFtQkssY0FBYzt3Q0FDeEQsTUFBTUMsc0JBQXNCUCxlQUFlTTt3Q0FDM0MsTUFBTUUsb0JBQW9CRCxzQkFBc0JUO3dDQUNoRFQsa0JBQWtCbUI7b0NBQ3BCLE9BQU87d0NBQ0wscUVBQXFFO3dDQUNyRSxNQUFNQyxrQkFBa0JaLG9CQUFvQkM7d0NBQzVDLE1BQU1TLHNCQUFzQixDQUFDUCxlQUFlUyxlQUFjLElBQUs7d0NBQy9ELE1BQU1ELG9CQUFvQkQsc0JBQXNCVDt3Q0FDaERULGtCQUFrQm1CO29DQUNwQjtnQ0FDRjs0QkFDRjt3QkFDRjt3QkFFQSwrQ0FBK0M7d0JBQy9DLE1BQU01QixpQkFBaUJNO3dCQUN2QixNQUFNTCx3QkFBd0JNLFlBQVksSUFBSSxpQkFBa0JBLFlBQWEsTUFBTTt3QkFDbkYsTUFBTVYsbUJBQW1CVSxZQUFZLElBQUksaUJBQWtCQSxZQUFhLE1BQU07d0JBRTlFWixTQUFTOzRCQUNQQyxXQUFXYTs0QkFDWFo7NEJBQ0FDLGFBQWFROzRCQUNiUCxvQkFBb0JRLFlBQVksSUFBSSxtQkFBb0JBLFlBQWEsTUFBTTs0QkFDM0VQOzRCQUNBQzs0QkFDQUMsU0FBUzs0QkFDVEMsT0FBTzt3QkFDVDtvQkFDRixFQUFFLE9BQU9BLE9BQU87d0JBQ2RSOzBFQUFTVSxDQUFBQSxPQUFTO29DQUNoQixHQUFHQSxJQUFJO29DQUNQSCxTQUFTO29DQUNUQyxPQUFPQSxpQkFBaUIyQixRQUFRM0IsTUFBTTRCLE9BQU8sR0FBRztnQ0FDbEQ7O29CQUNGO2dCQUNGOztZQUVBM0I7UUFDRjtzQ0FBRztRQUFDYjtRQUFlQztLQUFhO0lBRWhDLE9BQU9FO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL3dlbnRhb2Zhbi9EZXNrdG9wL1RyYWluaW5nL1Byb2plY3QvRmluYWwvZnJvbnRlbmQvaG9va3MvdXNlUG9ydGZvbGlvR2FpbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVBvcnRmb2xpbyB9IGZyb20gJy4vdXNlUG9ydGZvbGlvJztcbmltcG9ydCB7IHVzZVBvcnRmb2xpb0RhdGEgfSBmcm9tICcuL3VzZVBvcnRmb2xpb0RhdGEnO1xuaW1wb3J0IHsgdXNlWWVzdGVyZGF5UHJpY2VzIH0gZnJvbSAnLi91c2VZZXN0ZXJkYXlQcmljZXMnO1xuXG5pbnRlcmZhY2UgR2FpbkRhdGEge1xuICB0b2RheUdhaW46IG51bWJlcjtcbiAgdG9kYXlHYWluUGVyY2VudDogbnVtYmVyO1xuICBob2xkaW5nR2FpbjogbnVtYmVyO1xuICBob2xkaW5nR2FpblBlcmNlbnQ6IG51bWJlcjtcbiAgY3VtdWxhdGl2ZUdhaW46IG51bWJlcjtcbiAgY3VtdWxhdGl2ZUdhaW5QZXJjZW50OiBudW1iZXI7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGVycm9yOiBzdHJpbmcgfCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgdXNlUG9ydGZvbGlvR2FpbnMgPSAoKTogR2FpbkRhdGEgPT4ge1xuICBjb25zdCB7IGRhdGE6IHBvcnRmb2xpb0RhdGEgfSA9IHVzZVBvcnRmb2xpbygpO1xuICBjb25zdCB7IGRhdGE6IGdhaW5Mb3NzRGF0YSB9ID0gdXNlUG9ydGZvbGlvRGF0YSgpO1xuICBjb25zdCB7IGRhdGE6IHllc3RlcmRheVByaWNlcyB9ID0gdXNlWWVzdGVyZGF5UHJpY2VzKCk7XG4gIGNvbnN0IFtnYWlucywgc2V0R2FpbnNdID0gdXNlU3RhdGU8R2FpbkRhdGE+KHtcbiAgICB0b2RheUdhaW46IDAsXG4gICAgdG9kYXlHYWluUGVyY2VudDogMCxcbiAgICBob2xkaW5nR2FpbjogMCxcbiAgICBob2xkaW5nR2FpblBlcmNlbnQ6IDAsXG4gICAgY3VtdWxhdGl2ZUdhaW46IDAsXG4gICAgY3VtdWxhdGl2ZUdhaW5QZXJjZW50OiAwLFxuICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgIGVycm9yOiBudWxsXG4gIH0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFwb3J0Zm9saW9EYXRhIHx8ICFnYWluTG9zc0RhdGEgfHwgIXllc3RlcmRheVByaWNlcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGNhbGN1bGF0ZUdhaW5zID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0R2FpbnMocHJldiA9PiAoeyAuLi5wcmV2LCBsb2FkaW5nOiB0cnVlIH0pKTtcblxuICAgICAgICAvLyBDYWxjdWxhdGUgaG9sZGluZyBnYWlucyAoY3VycmVudCB2YWx1ZSAtIHRvdGFsIGNvc3QpXG4gICAgICAgIGxldCB0b3RhbEhvbGRpbmdHYWluID0gMDtcbiAgICAgICAgbGV0IHRvdGFsQ29zdCA9IDA7XG4gICAgICAgIGxldCB0b3RhbEN1cnJlbnRWYWx1ZSA9IDA7XG4gICAgICAgIGxldCB0b3RhbFRvZGF5R2FpbiA9IDA7XG5cbiAgICAgICAgLy8gQ2FsY3VsYXRlIHRvZGF5J3MgZ2FpbiBmb3IgZWFjaCBob2xkaW5nXG4gICAgICAgIGZvciAoY29uc3QgaG9sZGluZyBvZiBnYWluTG9zc0RhdGEuaG9sZGluZ3MpIHtcbiAgICAgICAgICBpZiAoaG9sZGluZy5jdXJyZW50X3ZhbHVlICYmIGhvbGRpbmcudG90YWxfY29zdCAmJiBob2xkaW5nLmhvbGRpbmdfc2hhcmVzKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBOdW1iZXIoaG9sZGluZy5jdXJyZW50X3ZhbHVlKTtcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsQ29zdEZvclN0b2NrID0gTnVtYmVyKGhvbGRpbmcudG90YWxfY29zdCk7XG4gICAgICAgICAgICBjb25zdCBzaGFyZXMgPSBOdW1iZXIoaG9sZGluZy5ob2xkaW5nX3NoYXJlcyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBob2xkaW5nIGdhaW5cbiAgICAgICAgICAgIGNvbnN0IGhvbGRpbmdHYWluID0gY3VycmVudFZhbHVlIC0gdG90YWxDb3N0Rm9yU3RvY2s7XG4gICAgICAgICAgICB0b3RhbEhvbGRpbmdHYWluICs9IGhvbGRpbmdHYWluO1xuICAgICAgICAgICAgdG90YWxDb3N0ICs9IHRvdGFsQ29zdEZvclN0b2NrO1xuICAgICAgICAgICAgdG90YWxDdXJyZW50VmFsdWUgKz0gY3VycmVudFZhbHVlO1xuXG4gICAgICAgICAgICAvLyBDYWxjdWxhdGUgdG9kYXkncyBnYWluIHVzaW5nIGN1cnJlbnQgcHJpY2UgYW5kIHllc3RlcmRheSdzIHByaWNlXG4gICAgICAgICAgICBpZiAoaG9sZGluZy5jdXJyZW50X3ByaWNlKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRQcmljZSA9IE51bWJlcihob2xkaW5nLmN1cnJlbnRfcHJpY2UpO1xuICAgICAgICAgICAgICBjb25zdCB5ZXN0ZXJkYXlQcmljZURhdGEgPSB5ZXN0ZXJkYXlQcmljZXMuZmluZChwID0+IHAuc3ltYm9sID09PSBob2xkaW5nLnRpY2tlcl9zeW1ib2wpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgaWYgKHllc3RlcmRheVByaWNlRGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHllc3RlcmRheVByaWNlID0geWVzdGVyZGF5UHJpY2VEYXRhLnllc3RlcmRheVByaWNlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhaWx5Q2hhbmdlUGVyU2hhcmUgPSBjdXJyZW50UHJpY2UgLSB5ZXN0ZXJkYXlQcmljZTtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2RheUdhaW5Gb3JTdG9jayA9IGRhaWx5Q2hhbmdlUGVyU2hhcmUgKiBzaGFyZXM7XG4gICAgICAgICAgICAgICAgdG90YWxUb2RheUdhaW4gKz0gdG9kYXlHYWluRm9yU3RvY2s7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gRmFsbGJhY2s6IHVzZSBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2YgdGhlIHRvdGFsIGdhaW4gYXMgZGFpbHkgY2hhbmdlXG4gICAgICAgICAgICAgICAgY29uc3QgYXZnQ29zdFBlclNoYXJlID0gdG90YWxDb3N0Rm9yU3RvY2sgLyBzaGFyZXM7XG4gICAgICAgICAgICAgICAgY29uc3QgZGFpbHlDaGFuZ2VQZXJTaGFyZSA9IChjdXJyZW50UHJpY2UgLSBhdmdDb3N0UGVyU2hhcmUpICogMC4wMTtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2RheUdhaW5Gb3JTdG9jayA9IGRhaWx5Q2hhbmdlUGVyU2hhcmUgKiBzaGFyZXM7XG4gICAgICAgICAgICAgICAgdG90YWxUb2RheUdhaW4gKz0gdG9kYXlHYWluRm9yU3RvY2s7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDYWxjdWxhdGUgY3VtdWxhdGl2ZSBnYWluIChzdW0gb2YgYWxsIGdhaW5zKVxuICAgICAgICBjb25zdCBjdW11bGF0aXZlR2FpbiA9IHRvdGFsSG9sZGluZ0dhaW47XG4gICAgICAgIGNvbnN0IGN1bXVsYXRpdmVHYWluUGVyY2VudCA9IHRvdGFsQ29zdCA+IDAgPyAoY3VtdWxhdGl2ZUdhaW4gLyB0b3RhbENvc3QpICogMTAwIDogMDtcbiAgICAgICAgY29uc3QgdG9kYXlHYWluUGVyY2VudCA9IHRvdGFsQ29zdCA+IDAgPyAodG90YWxUb2RheUdhaW4gLyB0b3RhbENvc3QpICogMTAwIDogMDtcblxuICAgICAgICBzZXRHYWlucyh7XG4gICAgICAgICAgdG9kYXlHYWluOiB0b3RhbFRvZGF5R2FpbixcbiAgICAgICAgICB0b2RheUdhaW5QZXJjZW50LFxuICAgICAgICAgIGhvbGRpbmdHYWluOiB0b3RhbEhvbGRpbmdHYWluLFxuICAgICAgICAgIGhvbGRpbmdHYWluUGVyY2VudDogdG90YWxDb3N0ID4gMCA/ICh0b3RhbEhvbGRpbmdHYWluIC8gdG90YWxDb3N0KSAqIDEwMCA6IDAsXG4gICAgICAgICAgY3VtdWxhdGl2ZUdhaW4sXG4gICAgICAgICAgY3VtdWxhdGl2ZUdhaW5QZXJjZW50LFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiBudWxsXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgc2V0R2FpbnMocHJldiA9PiAoe1xuICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBjYWxjdWxhdGUgZ2FpbnMnXG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY2FsY3VsYXRlR2FpbnMoKTtcbiAgfSwgW3BvcnRmb2xpb0RhdGEsIGdhaW5Mb3NzRGF0YV0pO1xuXG4gIHJldHVybiBnYWlucztcbn07ICJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVBvcnRmb2xpbyIsInVzZVBvcnRmb2xpb0RhdGEiLCJ1c2VZZXN0ZXJkYXlQcmljZXMiLCJ1c2VQb3J0Zm9saW9HYWlucyIsImRhdGEiLCJwb3J0Zm9saW9EYXRhIiwiZ2Fpbkxvc3NEYXRhIiwieWVzdGVyZGF5UHJpY2VzIiwiZ2FpbnMiLCJzZXRHYWlucyIsInRvZGF5R2FpbiIsInRvZGF5R2FpblBlcmNlbnQiLCJob2xkaW5nR2FpbiIsImhvbGRpbmdHYWluUGVyY2VudCIsImN1bXVsYXRpdmVHYWluIiwiY3VtdWxhdGl2ZUdhaW5QZXJjZW50IiwibG9hZGluZyIsImVycm9yIiwiY2FsY3VsYXRlR2FpbnMiLCJwcmV2IiwidG90YWxIb2xkaW5nR2FpbiIsInRvdGFsQ29zdCIsInRvdGFsQ3VycmVudFZhbHVlIiwidG90YWxUb2RheUdhaW4iLCJob2xkaW5nIiwiaG9sZGluZ3MiLCJjdXJyZW50X3ZhbHVlIiwidG90YWxfY29zdCIsImhvbGRpbmdfc2hhcmVzIiwiY3VycmVudFZhbHVlIiwiTnVtYmVyIiwidG90YWxDb3N0Rm9yU3RvY2siLCJzaGFyZXMiLCJjdXJyZW50X3ByaWNlIiwiY3VycmVudFByaWNlIiwieWVzdGVyZGF5UHJpY2VEYXRhIiwiZmluZCIsInAiLCJzeW1ib2wiLCJ0aWNrZXJfc3ltYm9sIiwieWVzdGVyZGF5UHJpY2UiLCJkYWlseUNoYW5nZVBlclNoYXJlIiwidG9kYXlHYWluRm9yU3RvY2siLCJhdmdDb3N0UGVyU2hhcmUiLCJFcnJvciIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/usePortfolioGains.ts\n"));

/***/ })

});